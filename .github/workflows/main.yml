name: Google DCA Tests

# Controls when the action will run.
on:
  [workflow_dispatch]

env:
  GOLANG_SAMPLES_PROJECT_ID: shinfan-mtls-demo
  CLIENT_CERTIFICATE: ${{ secrets.CLIENT_CERTIFICATE }}
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  CREDENTIALS: ${{ secrets.CREDENTIALS }}
  GOOGLE_API_USE_CLIENT_CERTIFICATE: true
  GOLANG_SAMPLES_E2E_TEST: 1
  RUN_ALL_TESTS: 0
  GOLANG_SAMPLES_KMS_KEYRING: ring1
  GOLANG_SAMPLES_KMS_CRYPTOKEY: key1
  GCLOUD_ORGANIZATION: 1081635000895
  SCC_PUBSUB_PROJECT: project-a-id
  SCC_PUBSUB_TOPIC: projects/project-a-id/topics/notifications-sample-topic
  SCC_PUBSUB_SUBSCRIPTION: notification-sample-subscription
  GOLANG_SAMPLES_SPANNER: projects/shinfan-mtls-demo/instances/dca-testing-instance
  GOLANG_SAMPLES_BIGTABLE_PROJECT: shinfan-mtls-demo
  GOLANG_SAMPLES_BIGTABLE_INSTANCE: dca-testing-instance
  GOLANG_SAMPLES_FIRESTORE_PROJECT: golang-samples-fire-0

jobs:
  invalid-cert-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Invalid Certificate Test
      env:
        TESTING_DIR: pubsub
        NEGATIVE_TEST: 1
        USE_INVALID_CERT: 1
      run: ./testing/dca/system_tests.sh
  pubsub-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Pubsub DCA Test
      env:
        TESTING_DIR: pubsub
      run: ./testing/dca/system_tests.sh
  pubsub-no-cert-test:
    runs-on: ubuntu-latest
    needs: pubsub-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Pubsub DCA Test
      env:
        TESTING_DIR: pubsub
        NEGATIVE_TEST: 1
        GOOGLE_API_USE_CLIENT_CERTIFICATE: false
      run: ./testing/dca/system_tests.sh
  kms-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud KMS DCA Test
      env:
        TESTING_DIR: kms
      run: ./testing/dca/system_tests.sh
  kms-no-cert-test:
    runs-on: ubuntu-latest
    needs: kms-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud KMS DCA Test
      env:
        TESTING_DIR: kms
        NEGATIVE_TEST: 1
        GOOGLE_API_USE_CLIENT_CERTIFICATE: false
      run: ./testing/dca/system_tests.sh
  bq-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud BigQuery DCA Test
      env:
        TESTING_DIR: bigquery
      run: ./testing/dca/system_tests.sh
  bq-no-cert-test:
    runs-on: ubuntu-latest
    needs: bq-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud BigQuery DCA Test
      env:
        TESTING_DIR: bigquery
        NEGATIVE_TEST: 1
        GOOGLE_API_USE_CLIENT_CERTIFICATE: false
      run: ./testing/dca/system_tests.sh
  spanner-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Spanner DCA Test
      env:
        TESTING_DIR: spanner
      run: ./testing/dca/system_tests.sh
  spanner-no-cert-test:
    runs-on: ubuntu-latest
    needs: spanner-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Spanner DCA Test
      env:
        TESTING_DIR: spanner
        NEGATIVE_TEST: 1
        GOOGLE_API_USE_CLIENT_CERTIFICATE: false
      run: ./testing/dca/system_tests.sh
  container-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Container DCA Test
      env:
        TESTING_DIR: container
      run: ./testing/dca/system_tests.sh
  container-no-cert-test:
    runs-on: ubuntu-latest
    needs: container-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Container DCA Test
      env:
        TESTING_DIR: container
        NEGATIVE_TEST: 1
        GOOGLE_API_USE_CLIENT_CERTIFICATE: false
      run: ./testing/dca/system_tests.sh
  logging-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Logging DCA Test
      env:
        TESTING_DIR: logging
      run: ./testing/dca/system_tests.sh
  logging-no-cert-test:
    runs-on: ubuntu-latest
    needs: logging-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Logging DCA Test
      env:
        TESTING_DIR: logging
        NEGATIVE_TEST: 1
        GOOGLE_API_USE_CLIENT_CERTIFICATE: false
      run: ./testing/dca/system_tests.sh
  storage-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Storage DCA Test
      env:
        TESTING_DIR: storage
      run: ./testing/dca/system_tests.sh
  storage-no-cert-test:
    runs-on: ubuntu-latest
    needs: storage-test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.13.1'
    - name: Cloud Storage DCA Test
      env:
        TESTING_DIR: storage
        NEGATIVE_TEST: 1
        GOOGLE_API_USE_CLIENT_CERTIFICATE: false
      run: ./testing/dca/system_tests.sh
